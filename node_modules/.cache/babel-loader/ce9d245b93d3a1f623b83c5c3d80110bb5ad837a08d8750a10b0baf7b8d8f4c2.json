{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  _getOriginalResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status} ${res.statusText}`);\n  }\n  getInitialCards() {\n    return fetch(this._baseUrl + '/cards', {\n      headers: this._headers\n    }).then(res => {\n      return this._getOriginalResponse(res);\n    });\n  }\n  getUser() {\n    return fetch(this._baseUrl + '/users/me', {\n      headers: this._headers\n    }).then(res => {\n      return this._getOriginalResponse(res);\n    });\n  }\n  updateUserInfo(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    return fetch(this._baseUrl + '/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => {\n      return this._getOriginalResponse(res);\n    });\n  }\n  addCard(name, link) {\n    return fetch(this._baseUrl + '/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => {\n      return this._getOriginalResponse(res);\n    });\n  }\n  editAvatar(_ref2) {\n    let {\n      avatar\n    } = _ref2;\n    return fetch(this._baseUrl + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => {\n      return this._getOriginalResponse(res);\n    });\n  }\n  deleteCard(id) {\n    return fetch(this._baseUrl + '/cards/' + id, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._getOriginalResponse(res);\n    });\n  }\n  likeCard(id) {\n    return fetch(this._baseUrl + '/cards/' + id + '/likes', {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._getOriginalResponse(res);\n    });\n  }\n  unlikeCard(id) {\n    return fetch(this._baseUrl + '/cards/' + id + '/likes', {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._getOriginalResponse(res);\n    });\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-64',\n  headers: {\n    authorization: '395f55cb-af41-44d8-b340-ae79215baa0b',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_getOriginalResponse","res","ok","json","Promise","reject","status","statusText","getInitialCards","fetch","then","getUser","updateUserInfo","_ref","name","about","method","body","JSON","stringify","addCard","link","editAvatar","_ref2","avatar","deleteCard","id","likeCard","unlikeCard","api","authorization"],"sources":["/Users/nikitaprokopenko/Desktop/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(options) {\n        this._baseUrl = options.baseUrl;\n        this._headers = options.headers\n    }\n\n    _getOriginalResponse(res) {\n        if (res.ok) {\n            return res.json();\n\n        }\n        return Promise.reject(`Error: ${res.status} ${res.statusText}`);\n    }\n\n    getInitialCards() {\n        return fetch(this._baseUrl + '/cards', {\n            headers: this._headers\n        })\n            .then(res => { return this._getOriginalResponse(res) });\n\n    }\n\n    getUser() {\n        return fetch(this._baseUrl + '/users/me', {\n            headers: this._headers\n        })\n            .then(res => { return this._getOriginalResponse(res) })\n    }\n\n    updateUserInfo({name, about}) {\n        return fetch(this._baseUrl + '/users/me', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name, about\n            })\n        })\n            .then(res => { return this._getOriginalResponse(res) })\n    }\n\n    addCard(name, link) {\n        return fetch(this._baseUrl + '/cards', {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name, link\n            })\n        })\n            .then(res => { return this._getOriginalResponse(res) })\n    }\n\n    editAvatar({avatar}) {\n        return fetch(this._baseUrl + '/users/me/avatar', {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar\n            })\n        })\n            .then(res => { return this._getOriginalResponse(res) })\n    }\n\n    deleteCard(id) {\n        return fetch(this._baseUrl + '/cards/' + id, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => { return this._getOriginalResponse(res) })\n    }\n\n    likeCard(id) {\n        return fetch(this._baseUrl + '/cards/' + id + '/likes', {\n            method: 'PUT',\n            headers: this._headers,\n        })\n            .then(res => { return this._getOriginalResponse(res) })\n    }\n\n    unlikeCard(id) {\n        return fetch(this._baseUrl + '/cards/' + id + '/likes', {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => { return this._getOriginalResponse(res) })\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-64',\n    headers: {\n        authorization: '395f55cb-af41-44d8-b340-ae79215baa0b',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACNC,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAC/B,IAAI,CAACC,QAAQ,GAAGH,OAAO,CAACI,OAAO;EACnC;EAEAC,oBAAoBA,CAACC,GAAG,EAAE;IACtB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IAErB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;EACnE;EAEAC,eAAeA,CAAA,EAAG;IACd,OAAOC,KAAK,CAAC,IAAI,CAACb,QAAQ,GAAG,QAAQ,EAAE;MACnCG,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACGY,IAAI,CAACT,GAAG,IAAI;MAAE,OAAO,IAAI,CAACD,oBAAoB,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAE/D;EAEAU,OAAOA,CAAA,EAAG;IACN,OAAOF,KAAK,CAAC,IAAI,CAACb,QAAQ,GAAG,WAAW,EAAE;MACtCG,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACGY,IAAI,CAACT,GAAG,IAAI;MAAE,OAAO,IAAI,CAACD,oBAAoB,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAC/D;EAEAW,cAAcA,CAAAC,IAAA,EAAgB;IAAA,IAAf;MAACC,IAAI;MAAEC;IAAK,CAAC,GAAAF,IAAA;IACxB,OAAOJ,KAAK,CAAC,IAAI,CAACb,QAAQ,GAAG,WAAW,EAAE;MACtCoB,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBL,IAAI;QAAEC;MACV,CAAC;IACL,CAAC,CAAC,CACGL,IAAI,CAACT,GAAG,IAAI;MAAE,OAAO,IAAI,CAACD,oBAAoB,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAC/D;EAEAmB,OAAOA,CAACN,IAAI,EAAEO,IAAI,EAAE;IAChB,OAAOZ,KAAK,CAAC,IAAI,CAACb,QAAQ,GAAG,QAAQ,EAAE;MACnCoB,MAAM,EAAE,MAAM;MACdjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBL,IAAI;QAAEO;MACV,CAAC;IACL,CAAC,CAAC,CACGX,IAAI,CAACT,GAAG,IAAI;MAAE,OAAO,IAAI,CAACD,oBAAoB,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAC/D;EAEAqB,UAAUA,CAAAC,KAAA,EAAW;IAAA,IAAV;MAACC;IAAM,CAAC,GAAAD,KAAA;IACf,OAAOd,KAAK,CAAC,IAAI,CAACb,QAAQ,GAAG,kBAAkB,EAAE;MAC7CoB,MAAM,EAAE,OAAO;MACfjB,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBmB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBK;MACJ,CAAC;IACL,CAAC,CAAC,CACGd,IAAI,CAACT,GAAG,IAAI;MAAE,OAAO,IAAI,CAACD,oBAAoB,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAC/D;EAEAwB,UAAUA,CAACC,EAAE,EAAE;IACX,OAAOjB,KAAK,CAAC,IAAI,CAACb,QAAQ,GAAG,SAAS,GAAG8B,EAAE,EAAE;MACzCV,MAAM,EAAE,QAAQ;MAChBjB,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACGY,IAAI,CAACT,GAAG,IAAI;MAAE,OAAO,IAAI,CAACD,oBAAoB,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAC/D;EAEA0B,QAAQA,CAACD,EAAE,EAAE;IACT,OAAOjB,KAAK,CAAC,IAAI,CAACb,QAAQ,GAAG,SAAS,GAAG8B,EAAE,GAAG,QAAQ,EAAE;MACpDV,MAAM,EAAE,KAAK;MACbjB,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACGY,IAAI,CAACT,GAAG,IAAI;MAAE,OAAO,IAAI,CAACD,oBAAoB,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAC/D;EAEA2B,UAAUA,CAACF,EAAE,EAAE;IACX,OAAOjB,KAAK,CAAC,IAAI,CAACb,QAAQ,GAAG,SAAS,GAAG8B,EAAE,GAAG,QAAQ,EAAE;MACpDV,MAAM,EAAE,QAAQ;MAChBjB,OAAO,EAAE,IAAI,CAACD;IAClB,CAAC,CAAC,CACGY,IAAI,CAACT,GAAG,IAAI;MAAE,OAAO,IAAI,CAACD,oBAAoB,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;EAC/D;AACJ;AAEA,MAAM4B,GAAG,GAAG,IAAIpC,GAAG,CAAC;EAChBI,OAAO,EAAE,6CAA6C;EACtDE,OAAO,EAAE;IACL+B,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,eAAeD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}